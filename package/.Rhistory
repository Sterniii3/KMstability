install.packages("roxygen2")
Imports
Imports()
Depends()
?Imports
sessionInfo()
library(survminer)
library(survival)
sessionInfo()
Imports()
source('U:/KM_stability/stability_interval.R', encoding = 'UTF-8')
source('U:/KM_stability/stability_interval.R', encoding = 'UTF-8')
data <- data.frame(start_date = rep(0, 10), stop_date = c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), event = c(1, 1, 0, 1, 0, 1, 1, 0, 1, 1))
Figure1(data)
data <- data.frame(start_date = rep(0, 10), final_date = c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), event = c(1, 1, 0, 1, 0, 1, 1, 0, 1, 1))
Figure1(data)
data
KM <- survfit(Surv(difftime(final_date, start_date),
event) ~ 1,
type = "kaplan-meier",
conf.type = "log-log",
data = data)
difftime(final_date, start_date)
difftime(data$final_date, data$start_date)
as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230))
c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230)
as.Date(15103, origin="1970-01-01")
as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), origin="1970-01-01")
as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), origin = "2022-01-01")
data <- data.frame(start_date = as.Date(rep(0, 10), origin = "2022-01-01"), final_date = as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), origin = "2022-01-01"), event = c(1, 1, 0, 1, 0, 1, 1, 0, 1, 1))
Figure1(data)
@import KMstability
#' KMstability
#'
#' The KMstability package enables the investigation of the stability of the Kaplan-Meier estimate by the methods proposed by Betensky (2015) in a straight forward and easy way. It includes the generation of
#' detailed graphical presentations of the entire distribution via adequate Kaplan-Meier plots including confidence intervals and detailed life tables (function Figure1),
#' detailed graphical presentations of the alternative measure proposed by Betensky (function Figure2), as well as derived metrics (functions Table1, Figure4)
#' detailed graphical presentations of common measures of follow-up (i.e. time to censoring, observation time and observation time for those event-free) (function Figure3) and derived metrics (function Table4).
#'
#'
#' @docType package
#'
#' @author Stella Erdmann \email{erdmann@imbi.uni-heidelberg.de}
#'
#' @name KMstability
roxygen2::roxygenise(Figure1.R)
devtools::document()
rm(list = c("Figure1"))
devtools::document()
load.all()
loadall()
devtools::document()
rlang::last_error()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::use_vignette("introduction")
usethat::use_vignette("introduction")
install.packages("usethat")
usethat::use_vignette("introduction")
library(usethat)
library(usethis)
usethat::use_vignette("introduction")
devtools::load_all()
data <- data.frame(start_date = as.Date(rep(0, 10), origin = "2022-01-01"), final_date = as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), origin = "2022-01-01"), event = c(1, 1, 0, 1, 0, 1, 1, 0, 1, 1))
devtools::use_data(data)
use_vignette("introduction")
devtools::load_all(".")
devtools::install("KMstability")
devtools::load_all(".")
library(haven)
data <- read_dta("S:/uni-hd/tlrc/Baum/neu/T3N0-Data.dta")
names(data) <- c("ArchivNr",     "gebdat",       "Gender",       "start_date",      "ECOG",         "final_date",         "event",
"ADJU"  ,       "R"    ,        "LK_ENT" ,      "resektion"   , "Seite"    ,    "Histologie"  , "t3All" ,
"age"   ,       "agetype"  ,   "pT3N0"    ,    "T3subroup"  ,  "Chemotherapy")
Figure1(data)
Figure2(data)
Figure3(data)
Figure4(data)
Table2(data)
Table1(data)
devtools::load_all(".")
Table1(data)
devtools::document()
devtools::load_all(".")
Table1(data)
Table2(data)
Figure1(data = data)
Figure2(data = data)
Figure3(data = data)
Figure4(data = data)
calculate_FU(data = )
calculate_FU(data)
################################################################################
# measures of follow-up as a measure of the stability of the KM estimator      #
################################################################################
dfC <- subset(data, event == 0)
data$time <- difftime(data$final_date,
data$start_date)
FU = data.frame(strata = c(rep("C", dim(data)[1]), # time to censoring
rep("T = min(X, C)", dim(data)[1]), # observation time
rep("C|C<X", dim(dfC)[1])), # time to censoring among those who are censored
time = c(data$time,
data$time,
dfC$time),
event = c((data$event-1)*(-1),
rep(1, dim(data)[1]),
(dfC$event-1)*(-1)))
c(rep("C", dim(data)[1]), # time to censoring
rep("T = min(X, C)", dim(data)[1]), # observation time
rep("C|C<X", dim(dfC)[1]))
c(data$time,
data$time,
dfC$time)
data$time
data$time
dfC$time
dfC
data$time
devtools::document()
devtools::load_all(".")
calculate_FU(data)
library(haven)
data <- read_dta("S:/uni-hd/tlrc/Baum/neu/T3N0-Data.dta")
names(data) <- c("ArchivNr",     "gebdat",       "Gender",       "start_date",      "ECOG",         "final_date",         "event",
"ADJU"  ,       "R"    ,        "LK_ENT" ,      "resektion"   , "Seite"    ,    "Histologie"  , "t3All" ,
"age"   ,       "agetype"  ,   "pT3N0"    ,    "T3subroup"  ,  "Chemotherapy")
calculate_FU(data)
calculate_stability(data)
Figure1(data)
Figure2(data)
Figure3(data)
Figure4(data)
Table1(data)
Table2(data)
data <- data.frame(start_date = as.Date(rep(0, 10), origin = "2022-01-01"), final_date = as.Date(c(120, 300, 500, 750, 290, 98, 167, 250, 734, 230), origin = "2022-01-01"), event = c(1, 1, 0, 1, 0, 1, 1, 0, 1, 1))
Table2(data)
Table1(data)
Table1(data)
Figure4(data)
Figure1(data)
Figure2(data)
Figure3(data)
runif(100, 0, 250)
round(runif(100, 0, 250))
rbinom(1, 100, 0.9)
rbinom(100, 1, 0.9)
data <- data.frame(start_date = as.Date(rep(0, 100), origin = "2022-01-01"),
final_date = as.Date(round(runif(100, 0, 250)), origin = "2022-01-01"),
event = rbinom(100, 1, 0.9))
Figure1(data)
Figure2(data)
Figure3(data)
Figure4(data)
Table1(data)
Table2(data)
devtools::load_all(".")
devtools::document()
if(!require(devtools)) { install.packages("devtools"); require(devtools)}
devtools::install_github("Sterniii3/drugdevelopR")
devtools::install_github("Sterniii3/drugdevelopR")
devtools::install_github("Sterniii3/KMstability")
library(KMstability)
library(roxygen2)
load("U:/KM_stability/KMstability_package/.RData")
devtools::load_all(".")
library(KMstability)
devtools::document()
devtools::install_github("Sterniii3/KMstability")
library(KMstability)
data <- data.frame(start_date = c(as.Date(rep(0, 200), origin = "2022-01-01"),
as.Date(rep(0, 200), origin = "2022-01-01")),
final_date = c(as.Date(round(runif(200, 0, 250)), origin = "2022-01-01"),
as.Date(round(runif(200, 0, 450)), origin = "2022-01-01")),
event = c(rbinom(200, 1, 0.9), rbinom(200, 1, 0.9)),
group = c(rep(0, 200), rep(1, 200)))
Figure1_group(data)
Figure2_group(data)
Figure3_group(data)
Table1_group(data)
if(!require(devtools)) { install.packages("devtools"); require(devtools)}
devtools::install_github(repo = "Sterniii3/KMstability", subdir = "/package")
library(KMstability)
if(!require(devtools)) { install.packages("devtools"); require(devtools)}
devtools::install_github(repo = "Sterniii3/KMstability", subdir = "/package")
library(KMstability)
set.seed(41830619)
data <- data.frame(start_date = as.Date(rep(0, 100), origin = "2022-01-01"),
final_date = as.Date(round(runif(100, 0, 250)), origin = "2022-01-01"),
event = rbinom(100, 1, 0.9))
KM_plot(data) # Kaplan–Meier estimate of survivor function for overall survival, with 95% confidence intervals and numbers at risk.
SI_plot(data) # Stability interval: upper and lower limits for Kaplan–Meier estimate as proposed by Betensky (2015).
FU_plot(data) # Kaplan–Meier estimates of time to censoring, C, observation time, T, and time to censoring among those who are censored, C|C<X.
DC_plot(data) # Difference curve between upper and lower limits of Kaplan–Meier and partial difference curves between Kaplan–Meier and upper and lower limits.
KM_SI_tab(data)  # Quantile summaries of KM estimate and proposed upper and lower bounds of the stability interval with associated 95% confidence intervals (lower CI, upper CI).
FU_tab(data)
set.seed(41830619)
data <- data.frame(start_date = as.Date(rep(0, 100), origin = "2022-01-01"),
final_date = as.Date(round(runif(100, 0, 250)), origin = "2022-01-01"),
event = rbinom(100, 1, 0.7))
KM_plot(data) # Kaplan–Meier estimate of survivor function for overall survival, with 95% confidence intervals and numbers at risk.
SI_plot(data) # Stability interval: upper and lower limits for Kaplan–Meier estimate as proposed by Betensky (2015).
FU_plot(data) # Kaplan–Meier estimates of time to censoring, C, observation time, T, and time to censoring among those who are censored, C|C<X.
DC_plot(data) # Difference curve between upper and lower limits of Kaplan–Meier and partial difference curves between Kaplan–Meier and upper and lower limits.
KM_SI_tab(data)  # Quantile summaries of KM estimate and proposed upper and lower bounds of the stability interval with associated 95% confidence intervals (lower CI, upper CI).
FU_tab(data)
set.seed(41830619)
data <- data.frame(start_date = as.Date(rep(0, 100), origin = "2022-01-01"),
final_date = as.Date(round(runif(100, 0, 250)), origin = "2022-01-01"),
event = rbinom(100, 1, 0.5))
KM_plot(data) # Kaplan–Meier estimate of survivor function for overall survival, with 95% confidence intervals and numbers at risk.
SI_plot(data) # Stability interval: upper and lower limits for Kaplan–Meier estimate as proposed by Betensky (2015).
FU_plot(data) # Kaplan–Meier estimates of time to censoring, C, observation time, T, and time to censoring among those who are censored, C|C<X.
DC_plot(data) # Difference curve between upper and lower limits of Kaplan–Meier and partial difference curves between Kaplan–Meier and upper and lower limits.
KM_SI_tab(data)  # Quantile summaries of KM estimate and proposed upper and lower bounds of the stability interval with associated 95% confidence intervals (lower CI, upper CI).
FU_tab(data)
148,227+0.630*53
148.227+0.630*53
