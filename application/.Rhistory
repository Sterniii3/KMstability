shiny::runApp()
runApp()
runApp()
?difftime
runApp()
data <- read.csv("R:/austausch/Erdmann/KMstability/test.csv")
View(data)
library(tidyverse)
data %>% mutate(start_date = as.Date(start_date))
?as.Date
data %>% mutate(start_date = as.Date(start_date, origin = "1960-01-01"))
data %>% mutate(start_date = as.Date(start_date, origin = "1960-01-01"), stop_date = as.Date(stop_date, origin = "1960-01-01")) -> data
View(data)
data$final_date <- data$stop_date
KM <- survival::survfit(survival::Surv(difftime(final_date, start_date),
event) ~ 1,
type = "kaplan-meier",
conf.type = "log-log",
data = data)
plot1 <- survminer::ggsurvplot(KM,
data = data,
risk.table = TRUE,
conf.int = TRUE,
censor = TRUE,
title = "")
View(plot1)
plot1
KM
View(KM)
View(data)
?difftime
df <- subset(data, event == 1)
maximum_event_time <- ceiling(max(difftime(df$final_date,
df$start_date)))
# set all time of censored observations to the maximum event time
data$timeupper <- difftime(data$final_date,
data$start_date)
data$timeupper[data$event == 0] <- maximum_event_time
data$time <- difftime(data$final_date,
data$start_date)
dfC <- subset(data, event == 0)
dfE <- subset(data, event == 1)
for(i in 1:length(dfC$time)){
# difference of censoring time of censor event i (Ci) and
# observed event times following this event (E): m = E - Ci
m <- ((dfE$time - dfC$time[i])[(dfE$time - dfC$time[i]) > 0])
if(length(m) > 0){
# replace time of censoring of event i with observed event time
# immediately following this event (Ei): Ci + min(m) = Ci + Ei - Ci = Ei
dfC$timelower[i] <- dfC$time[i] + min(m)
}else{
# if there is no event time following the censoring event i: no replacement?
dfC$timelower[i] <- dfC$time[i]
}
}
# keep times of events
dfE$timelower <- as.numeric(dfE$time)
data <- rbind(dfC, dfE)
# code all censored observations as events
data$eventlower <- 1
DF = data.frame(strata = c(rep("KM estimate", dim(data)[1]),
rep("lower bound", dim(data)[1]),
rep("upper bound", dim(data)[1])),
time = c(data$time,
data$timelower,
data$timeupper),
event = c(data$event,
data$eventlower,
data$event))
DF$strata <- factor(DF$strata, levels = c("upper bound", "KM estimate", "lower bound"))
KM <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = DF)
# Figure 2. Proposed upper and lower limits for Kaplan–Meier.
plot2 <- ggsurvplot(KM,
data = DF,
risk.table = TRUE,
#  conf.int = TRUE,
censor = TRUE,
title = "",
legend = "none",
palette = c("gray50", "red", "gray51"))
plot2
frame <- as.data.frame(quantile(KM, probs = c(0.25, 0.5, 0.75), conf.int = TRUE))
frame
names(frame) <- c("0.25quantile",
"median",
"0.75quantile",
"lower CI 0.25quantile",
"lower CI median",
"lower CI 0.75quantile",
"upper CI 0.25quantile",
"upper CI median",
"upper CI 0.75quantile")
row.names(frame) <- c("upper bound", "KM estimate", "lower bound")
frame
DF_norm <- surv_summary(KM, data = DF)
DF_norm
subset(DF_norm, time <= maximum_event_time)
maximum_event_time
which(table(DF_norm$time) == 3)
table(DF_norm$time)
view(DF_norm)
summary(KM)
difftime(df$final_date, df$start_date)
View(data)
data$time <- difftime(data$final_date,
data$start_date, units = "days")
View(data)
dfC <- subset(data, event == 0)
dfE <- subset(data, event == 1)
for(i in 1:length(dfC$time)){
# difference of censoring time of censor event i (Ci) and
# observed event times following this event (E): m = E - Ci
m <- ((dfE$time - dfC$time[i])[(dfE$time - dfC$time[i]) > 0])
if(length(m) > 0){
# replace time of censoring of event i with observed event time
# immediately following this event (Ei): Ci + min(m) = Ci + Ei - Ci = Ei
dfC$timelower[i] <- dfC$time[i] + min(m)
}else{
# if there is no event time following the censoring event i: no replacement?
dfC$timelower[i] <- dfC$time[i]
}
}
# keep times of events
dfE$timelower <- as.numeric(dfE$time)
data <- rbind(dfC, dfE)
# code all censored observations as events
data$eventlower <- 1
DF = data.frame(strata = c(rep("KM estimate", dim(data)[1]),
rep("lower bound", dim(data)[1]),
rep("upper bound", dim(data)[1])),
time = c(data$time,
data$timelower,
data$timeupper),
event = c(data$event,
data$eventlower,
data$event))
DF$strata <- factor(DF$strata, levels = c("upper bound", "KM estimate", "lower bound"))
KM <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = DF)
# Figure 2. Proposed upper and lower limits for Kaplan–Meier.
plot2 <- ggsurvplot(KM,
data = DF,
risk.table = TRUE,
#  conf.int = TRUE,
censor = TRUE,
title = "",
legend = "none",
palette = c("gray50", "red", "gray51"))
frame <- as.data.frame(quantile(KM, probs = c(0.25, 0.5, 0.75), conf.int = TRUE))
names(frame) <- c("0.25quantile",
"median",
"0.75quantile",
"lower CI 0.25quantile",
"lower CI median",
"lower CI 0.75quantile",
"upper CI 0.25quantile",
"upper CI median",
"upper CI 0.75quantile")
row.names(frame) <- c("upper bound", "KM estimate", "lower bound")
summary(KM)
DF_norm <- surv_summary(KM, data = DF)
DF_norm
View(DF)
View(data)
maximum_event_time
df <- subset(data, event == 1)
maximum_event_time <- ceiling(max(difftime(df$final_date,
df$start_date)))
# set all time of censored observations to the maximum event time
data$timeupper <- difftime(data$final_date,
data$start_date)
data$timeupper[data$event == 0] <- maximum_event_time
# calculation of lower limit
# by "coding all censored observations as events at the observed event times
# immediately following their censoring times"
#-------------------------------------------------------------------------------
data$time <- difftime(data$final_date,
data$start_date)
dfC <- subset(data, event == 0)
dfE <- subset(data, event == 1)
for(i in 1:length(dfC$time)){
# difference of censoring time of censor event i (Ci) and
# observed event times following this event (E): m = E - Ci
m <- ((dfE$time - dfC$time[i])[(dfE$time - dfC$time[i]) > 0])
if(length(m) > 0){
# replace time of censoring of event i with observed event time
# immediately following this event (Ei): Ci + min(m) = Ci + Ei - Ci = Ei
dfC$timelower[i] <- dfC$time[i] + min(m)
}else{
# if there is no event time following the censoring event i: no replacement?
dfC$timelower[i] <- dfC$time[i]
}
}
# keep times of events
dfE$timelower <- as.numeric(dfE$time)
data <- rbind(dfC, dfE)
# code all censored observations as events
data$eventlower <- 1
DF = data.frame(strata = c(rep("KM estimate", dim(data)[1]),
rep("lower bound", dim(data)[1]),
rep("upper bound", dim(data)[1])),
time = c(data$time,
data$timelower,
data$timeupper),
event = c(data$event,
data$eventlower,
data$event))
DF$strata <- factor(DF$strata, levels = c("upper bound", "KM estimate", "lower bound"))
KM <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = DF)
# Figure 2. Proposed upper and lower limits for Kaplan–Meier.
plot2 <- ggsurvplot(KM,
data = DF,
risk.table = TRUE,
#  conf.int = TRUE,
censor = TRUE,
title = "",
legend = "none",
palette = c("gray50", "red", "gray51"))
# metrics derived from the upper and lower limits
#-------------------------------------------------------------------------------
# quantile summaries of limits:
frame <- as.data.frame(quantile(KM, probs = c(0.25, 0.5, 0.75), conf.int = TRUE))
names(frame) <- c("0.25quantile",
"median",
"0.75quantile",
"lower CI 0.25quantile",
"lower CI median",
"lower CI 0.75quantile",
"upper CI 0.25quantile",
"upper CI median",
"upper CI 0.75quantile")
row.names(frame) <- c("upper bound", "KM estimate", "lower bound")
# difference curve between the upper and lower limits and the area under this curve,
# normalized by the maximum event time, to range between 0 (complete stability) and 1 (complete instability)
DF_norm <- surv_summary(KM, data = DF)
DF_norm
maximum_event_time
difftime(data$final_date,
data$start_date)
df <- subset(data, event == 1)
maximum_event_time <- ceiling(max(difftime(df$final_date,
df$start_date)))
# set all time of censored observations to the maximum event time
data$timeupper <- difftime(data$final_date,
data$start_date, units = "days")
data$timeupper[data$event == 0] <- maximum_event_time
# calculation of lower limit
# by "coding all censored observations as events at the observed event times
# immediately following their censoring times"
#-------------------------------------------------------------------------------
data$time <- difftime(data$final_date,
data$start_date, units = "days")
dfC <- subset(data, event == 0)
dfE <- subset(data, event == 1)
for(i in 1:length(dfC$time)){
# difference of censoring time of censor event i (Ci) and
# observed event times following this event (E): m = E - Ci
m <- ((dfE$time - dfC$time[i])[(dfE$time - dfC$time[i]) > 0])
if(length(m) > 0){
# replace time of censoring of event i with observed event time
# immediately following this event (Ei): Ci + min(m) = Ci + Ei - Ci = Ei
dfC$timelower[i] <- dfC$time[i] + min(m)
}else{
# if there is no event time following the censoring event i: no replacement?
dfC$timelower[i] <- dfC$time[i]
}
}
# keep times of events
dfE$timelower <- as.numeric(dfE$time)
data <- rbind(dfC, dfE)
# code all censored observations as events
data$eventlower <- 1
DF = data.frame(strata = c(rep("KM estimate", dim(data)[1]),
rep("lower bound", dim(data)[1]),
rep("upper bound", dim(data)[1])),
time = c(data$time,
data$timelower,
data$timeupper),
event = c(data$event,
data$eventlower,
data$event))
DF$strata <- factor(DF$strata, levels = c("upper bound", "KM estimate", "lower bound"))
KM <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = DF)
# Figure 2. Proposed upper and lower limits for Kaplan–Meier.
plot2 <- ggsurvplot(KM,
data = DF,
risk.table = TRUE,
#  conf.int = TRUE,
censor = TRUE,
title = "",
legend = "none",
palette = c("gray50", "red", "gray51"))
# metrics derived from the upper and lower limits
#-------------------------------------------------------------------------------
# quantile summaries of limits:
frame <- as.data.frame(quantile(KM, probs = c(0.25, 0.5, 0.75), conf.int = TRUE))
names(frame) <- c("0.25quantile",
"median",
"0.75quantile",
"lower CI 0.25quantile",
"lower CI median",
"lower CI 0.75quantile",
"upper CI 0.25quantile",
"upper CI median",
"upper CI 0.75quantile")
row.names(frame) <- c("upper bound", "KM estimate", "lower bound")
# difference curve between the upper and lower limits and the area under this curve,
# normalized by the maximum event time, to range between 0 (complete stability) and 1 (complete instability)
DF_norm <- surv_summary(KM, data = DF)
view(DF_norm)
View(data)
keep <- as.numeric(names(which(table(DF_norm$time) == 3)))
data %>%
filter(event==1) %>%
unique(time, timelower, timeupper)
View(data)
data %>%
filter(event==1 | eventlower==1) %>%
pull(time, timelower, timeupper) -> xxx
?pull
data %>%
filter(event==1) %>%
pull(time) -> x
data %>%
filter(event==1) %>%
pull(timeupper) -> x2
data %>%
filter(eventlower==1) %>%
pull(timelower) -> x3
unique(c(x,x2,x3))
maximum_event_time
(unique(c(x,x2,x3)) %in% keep)
DF_norm <- subset(DF_norm, time %in% keep)
time <- subset(DF_norm, strata == "upper bound")$time
diff_upper_lower <- subset(DF_norm, strata == "upper bound")$surv - subset(DF_norm, strata == "lower bound")$surv
f <- approxfun(time, diff_upper_lower, method = "constant")
auc <- integrate(f,
lower = min(time),
upper = max(time),
subdivisions = 10000L)
norm_auc <- auc$value/as.numeric(maximum_event_time)
plot(time, f(time), type = "l")
lines(time, diff_upper_lower, type = "p", col = "red")
# partial difference curves to indicate directional instability:
# the difference between the upper limit and the Kaplan–Meier estimate and
diff_upper_KM <- subset(DF_norm, strata == "upper bound")$surv - subset(DF_norm, strata == "KM estimate")$surv
# the difference between the Kaplan–Meier estimate and the lower limit.
diff_KM_lower <- subset(DF_norm, strata == "KM estimate")$surv - subset(DF_norm, strata == "lower bound")$surv
DF4 <- data.frame(time = c(time, time, time),
strata = c(rep("upper limit minus lower limit", length(time)),
rep("upper limit minus KM estmate", length(time)),
rep("KM estimate minus lower limit", length(time))),
Probability = c(diff_upper_lower,
diff_upper_KM,
diff_KM_lower))
DF4$strata <- factor(DF4$strata, levels = c("upper limit minus lower limit",
"upper limit minus KM estmate",
"KM estimate minus lower limit"))
plot4 <- ggplot(data = DF4,
aes(x = time, y = Probability, group = strata)) +
# ggtitle("Difference curve between upper and lower limits of Kaplan–Meier and partial difference curves between Kaplan–Meier and upper and lower limits") +
geom_line(aes(linetype = strata)) +
scale_linetype_manual(name="", values = c("solid", "dotted", "dashed"),
labels=c(paste0("upper limit - lower limit;\n normalized auc = ",
round(norm_auc, 2 )),
"upper limit - KM estmate",
"KM estimate - lower limit")) +
theme_survminer()
plot4
dfC <- subset(data, event == 0)
FU = data.frame(strata = c(rep("C", dim(data)[1]), # time to censoring
rep("T = min(X, C)", dim(data)[1]), # observation time
rep("C|C<X", dim(dfC)[1])), # time to censoring among those who are censored
time = c(data$time,
data$time,
dfC$time),
event = c((data$event-1)*(-1),
rep(1, dim(data)[1]),
(dfC$event-1)*(-1)))
KM_FU <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = FU)
plot1 <- survminer::ggsurvplot(KM_FU,
data = data,
risk.table = TRUE,
conf.int = TRUE,
censor = TRUE,
title = "")
dfC <- subset(data, event == 0)
FU = data.frame(strata = c(rep("C", dim(data)[1]), # time to censoring
rep("T = min(X, C)", dim(data)[1]), # observation time
rep("C|C<X", dim(dfC)[1])), # time to censoring among those who are censored
time = c(data$time,
data$time,
dfC$time),
event = c((data$event-1)*(-1),
rep(1, dim(data)[1]),
(dfC$event-1)*(-1)))
KM_FU <- survfit(Surv(time, event) ~ strata,
type = "kaplan-meier",
conf.type = "log-log",
data = FU)
plot1 <- survminer::ggsurvplot(KM_FU,
data = FU,
risk.table = TRUE,
conf.int = TRUE,
censor = TRUE,
title = "")
plot1
frame1 <- as.data.frame(quantile(KM_FU, probs = c(0.25, 0.5, 0.75), conf.int = TRUE))
names(frame1) <- c("0.25quantile",
"median",
"0.75quantile",
"lower CI 0.25quantile",
"lower CI median",
"lower CI 0.75quantile",
"upper CI 0.25quantile",
"upper CI median",
"upper CI 0.75quantile")
row.names(frame1) <- c("C", "C|C<X", "T = min(X, C)")
frame1
dfC$time
quantile(dfC$time, probs = c(0.25,0.5, 0.75))
quantile(data$time, probs = c(0.25,0.5, 0.75))
view(dfC)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
# calculation of upper limit
# by "setting all censored observations to a value larger than the maximum event
# time (and retaining their status as censored)"
#-------------------------------------------------------------------------------
# maximum event time
# df <- subset(data, event == 1)
# maximum_event_time <- ceiling(max(difftime(df$final_date,
#                                            df$start_date)))
maximum_event_time <- ceiling(max(difftime(data$final_date,
data$start_date)))
runApp()
if(!require(devtools)) { install.packages("devtools"); require(devtools)}
devtools::install_github("Sterniii3/KMstability")
library(readr)
data <- read_delim("R:/austausch/Erdmann/KMstability/data2.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(KMstability)
Figure1(data)
data <- read_delim("R:/austausch/Erdmann/KMstability/data1.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
Figure1(data)
data <- read_delim("R:/austausch/Erdmann/KMstability/data1.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
Figure1(data)
data$`","ArchivNr","gebdat","Gender","start_date","ECOG","final_date","event","ADJU","R","LK_ENT","resektion","Seite","Histologie","t3All","age","agetype","pT3N0","T3subroup","Chemotherapy","timeupper","time`
library(readr)
data <- read_csv("R:/austausch/Erdmann/KMstability/data1.csv")
Figure1(data)
data <- data.frame(start_date = as.Date(rep(0, 100), origin = "2022-01-01"),
final_date = as.Date(round(runif(100, 0, 250)), origin = "2022-01-01"),
event = rbinom(100, 1, 0.9))
Figure1(data)
Figure2(data)
Figure3(data)
Figure4(data)
Table1(data)
Table2(data)
Table2(data)
runApp()
runApp()
if(!require(devtools)) { install.packages("devtools"); require(devtools)}
devtools::install_github("Sterniii3/KMstability")
